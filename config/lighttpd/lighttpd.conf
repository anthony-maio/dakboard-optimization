# Optimized Lighttpd Configuration for DAKboard
# Author: Anthony Maio
# Repository: https://github.com/anthony-maio/dakboard-optimization

# Module Loading
server.modules = (
    "mod_auth",
    "mod_access",
    "mod_alias",
    "mod_compress",
    "mod_redirect",
    "mod_rewrite",
    "mod_fastcgi",
    "mod_setenv"
)

# Basic Server Configuration
server.document-root        = "/var/www/html"
server.upload-dirs         = ( "/var/cache/lighttpd/uploads" )
server.errorlog            = "/var/log/lighttpd/error.log"
server.pid-file           = "/run/lighttpd.pid"
server.username           = "www-data"
server.groupname          = "www-data"
server.port               = 80

# Performance Tuning
server.max-keep-alive-requests = 100
server.max-keep-alive-idle    = 30
server.max-read-idle         = 60
server.max-write-idle        = 360
server.max-worker            = 4
static-file.etags            = "enable"
server.network-backend      = "sendfile"
server.stat-cache-engine    = "simple"
server.max-connections      = 1024
server.cores               = 4

# Compression Configuration
compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype          = (
    "application/javascript",
    "text/css",
    "text/html",
    "text/plain",
    "text/xml",
    "application/json",
    "application/x-javascript",
    "application/xml",
    "text/javascript",
    "application/x-yaml"
)

# FastCGI Configuration
fastcgi.server = ( ".php" =>
    ((
        "socket" => "/var/run/php/php-fcgi.socket",
        "bin-path" => "/usr/bin/php-cgi",
        "max-procs" => 4,
        "idle-timeout" => 20,
        "bin-environment" => (
            "PHP_FCGI_CHILDREN" => "4",
            "PHP_FCGI_MAX_REQUESTS" => "10000"
        ),
        "bin-copy-environment" => (
            "PATH", "SHELL", "USER"
        ),
        "broken-scriptfilename" => "enable"
    ))
)

# MIME Types and Encoding
mimetype.assign = (
    ".html" => "text/html",
    ".htm" => "text/html",
    ".txt" => "text/plain",
    ".jpg" => "image/jpeg",
    ".png" => "image/png",
    ".css" => "text/css",
    ".js" => "application/javascript",
    ".json" => "application/json",
    ".xml" => "application/xml",
    ".svg" => "image/svg+xml",
    ".ico" => "image/x-icon"
)

# URL Handling and Access
url.access-deny = ( "~", ".inc", ".md", ".sql", ".log" )
url.redirect = ( "^/$" => "/index.php" )
static-file.exclude-extensions = ( ".php", ".pl", ".cgi", ".fcgi" )
index-file.names = ( "index.php", "index.html" )

# Security Headers
setenv.add-response-header = (
    "X-Frame-Options" => "SAMEORIGIN",
    "X-Content-Type-Options" => "nosniff",
    "X-XSS-Protection" => "1; mode=block",
    "Referrer-Policy" => "strict-origin-when-cross-origin",
    "Content-Security-Policy" => "default-src 'self' 'unsafe-inline' 'unsafe-eval' https: data:;",
    "Permissions-Policy" => "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"
)

# Cache Control
# Optimize caching for static assets
$HTTP["url"] =~ "\.(jpg|jpeg|png|gif|ico|css|js)$" {
    expire.url = ( "" => "access plus 1 months" )
    setenv.add-response-header += ( "Cache-Control" => "public, max-age=2592000" )
}

# Special handling for API and dynamic content
$HTTP["url"] =~ "^/api/" {
    expire.url = ( "" => "access plus 0 seconds" )
    setenv.add-response-header += ( "Cache-Control" => "no-store, no-cache, must-revalidate" )
}

# Error Handling
server.error-handler-404 = "/error/404.html"
server.error-handler-500 = "/error/500.html"

# Directory Listing
dir-listing.activate = "disable"

# Debug Settings (disable in production)
debug.log-request-handling = "disable"
debug.log-file-not-found = "disable"
debug.log-request-header = "disable"
debug.log-response-header = "disable"

# Resource Usage Limits
server.max-request-size = 2097152  # 2MB
server.max-worker-lifetime = 900   # 15 minutes

# Timeout Settings
server.event-handler = "linux-sysepoll"
server.network-backend = "writev"
server.max-read-idle = 60
server.max-write-idle = 360

# Handle PHP files through FastCGI only
$HTTP["url"] =~ "\.php$" {
    fastcgi.server = ( ".php" =>
        ((
            "socket" => "/var/run/php/php-fcgi.socket",
            "bin-path" => "/usr/bin/php-cgi",
            "max-procs" => 4,
            "broken-scriptfilename" => "enable"
        ))
    )
}

# Additional Security Measures
# Deny access to hidden files and directories
$HTTP["url"] =~ "/\." {
    url.access-deny = ( "" )
}

# Protect sensitive files
$HTTP["url"] =~ "\.(htaccess|htpasswd|ini|log|sh|inc|bak|tpl|conf)$" {
    url.access-deny = ( "" )
}

# SSL Configuration (if needed)
# Uncomment and configure for HTTPS
#$SERVER["socket"] == ":443" {
#    ssl.engine = "enable"
#    ssl.pemfile = "/etc/lighttpd/certs/server.pem"
#    ssl.ca-file = "/etc/lighttpd/certs/ca.crt"
#    ssl.honor-cipher-order = "enable"
#    ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
#    ssl.use-compression = "disable"
#    ssl.use-sslv2 = "disable"
#    ssl.use-sslv3 = "disable"
#}
